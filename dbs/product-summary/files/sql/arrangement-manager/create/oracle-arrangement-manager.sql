create table arrangement
  (   
    id                           varchar2(36) not null,
    bban                         varchar2(50),
    iban                         varchar2(34),
    accrued_interest             decimal(23, 5),
    alias                        varchar2(50),
    available_balance            decimal(23, 5),
    booked_balance               decimal(23, 5),
    credit_limit                 decimal(23, 5),
    currency                     varchar2(3),
    current_investment_value     decimal(23, 5),
    external_arrangement_id      varchar2(50),
    external_product_id          varchar2(50) not null,
    external_transfer_allowed    number(1),
    name                         varchar2(50),
    pan_suffix                   varchar2(36),
    principal_amount             decimal(23, 5),
    product_id                   varchar2(36) not null,
    product_number               varchar2(36),
    urgent_transfer_allowed      number(1),
    bic                          varchar2(11),
    bank_branch_code             varchar2(20),
    visible                      number(1),
    account_opening_date         timestamp,
    account_interest_rate        decimal(8, 2),
    value_date_balance           decimal(23, 5),
    credit_limit_usage           decimal(23, 5),
    credit_limit_interest_rate   decimal(8, 2),
    credit_limit_expiry_date     timestamp,
    start_date                   timestamp,
    term_unit                    varchar2(1),
    term_number                  number(16),
    maturity_date                timestamp,
    maturity_amount              decimal(23, 5),
    auto_renewal_indicator       number(1),
    interest_payment_freq_unit   varchar2(1),
    interest_payment_freq_number number(16),
    interest_settlement_account  varchar2(32),
    outstanding_principal_amount decimal(23, 5),
    monthly_instalment_amount    decimal(23, 5),
    amount_in_arrear             decimal(23, 5),
    minimum_required_balance     decimal(23, 5),
    credit_card_account_number   varchar2(32),
    valid_thru                   timestamp,
    applicable_interest_rate     decimal(8, 2),
    account_holder_country       varchar2(2),
    remaining_credit             decimal(23, 5),
    outstanding_payment          decimal(23, 5),
    minimum_payment              decimal(23, 5),
    minimum_payment_due_date     timestamp,
    total_investment_value       decimal(23, 5),
    account_holder_address_line1 varchar2(70),
    account_holder_address_line2 varchar2(70),
    account_holder_street_name   varchar2(70),
    town                         varchar2(35),
    post_code                    varchar2(16),
    country_sub_division         varchar2(35),
    credit_account               number(1),
    debit_account                number(1),
    account_holder_name          varchar2(256),
    last_update_date             timestamp,
    date_deleted                 timestamp,
    is_deleted                   number(1),
    deleted_ext_arr_id           varchar2(50),
    custom_order                 integer default 0 not null,
    source_id                    varchar2(11),
    state_id                     integer,
    parent_id                    varchar2(36),
    external_parent_id           varchar2(50),
    additions                    nclob null
  );

alter table arrangement add constraint pk_arrangement primary key (id);
create unique index ix_arrangement_1 on arrangement(external_arrangement_id);

/** adding indexes for improving performance **/
create index ix_arrangement_ext_prod_id on arrangement(external_product_id);
create index ix_arrangement_ex_trn_allowed on arrangement(external_transfer_allowed);
create index ix_arrangement_credit_account on arrangement(credit_account);
create index ix_arrangement_debit_account on arrangement(debit_account);
create index ix_arrangement_custom_order on arrangement(custom_order);
create index ix_arrangement_iban on arrangement(iban);

create table debit_card
(
  id                 varchar2(36) not null,
  arrangement_id     varchar2(36) not null,
  pan_suffix         varchar2(36),
  expiry_date        varchar2(32),
  card_id            varchar2(32),
  card_holder_name   varchar2(64),
  card_type          varchar2(32)
);
alter table debit_card add constraint pk_debit_card primary key (id);

alter table debit_card add constraint fk_debit_card2arrangement foreign key (arrangement_id) references arrangement(id);

create index ix_dc_arrangement_id on debit_card(arrangement_id);

/** product_kind **/
create table product_kind
(
  id                integer generated by default on null as identity not null,
  external_kind_id  varchar2(50) not null,
  kind_name         varchar2(50) not null,
  kind_uri          varchar2(50) not null,
  custom_order      integer default 0 not null,
  translations      nclob null,
  additions         nclob null,
  constraint  pk_product_kind primary key ( id ) using index (create unique index ix_product_kind_id on product_kind(id))
);

alter table product_kind add constraint uq_prod_kind_ext_kind_id unique (external_kind_id);
alter table product_kind add constraint uq_prod_kind_kind_name unique (kind_name);
alter table product_kind add constraint uq_prod_kind_kind_uri unique (kind_uri);

create unique index ix_product_kind_custom_order on product_kind(custom_order);

insert into product_kind (external_kind_id, kind_name, kind_uri, custom_order) values ('kind1', 'Current Account', 'current-account', 1);
insert into product_kind (external_kind_id, kind_name, kind_uri, custom_order) values ('kind2', 'Savings Account', 'savings-account', 2);
insert into product_kind (external_kind_id, kind_name, kind_uri, custom_order) values ('kind3', 'Debit Card', 'debit-card', 3);
insert into product_kind (external_kind_id, kind_name, kind_uri, custom_order) values ('kind4', 'Credit Card', 'credit-card', 4);
insert into product_kind (external_kind_id, kind_name, kind_uri, custom_order) values ('kind5', 'Loan', 'loan', 5);
insert into product_kind (external_kind_id, kind_name, kind_uri, custom_order) values ('kind6', 'Term Deposit', 'term-deposit', 6);
insert into product_kind (external_kind_id, kind_name, kind_uri, custom_order) values ('kind7', 'Investment Account', 'investment-account', 7);

create table product
  (
    id                       varchar2(36) not null,
    external_id              varchar2(50) not null,
    external_type_id         varchar2(50),
    type_name                varchar2(50),
    product_kind_id          integer not null,
    translations             nclob null,
    additions                nclob null
  );

alter table product add constraint pk_product primary key (id);
alter table product add constraint fk_product2product_kind foreign key (product_kind_id) references product_kind(id);

/** adding indexes for improving performance **/
create index IX_EXTERNAL_ID on product(external_id);
create index ix_prod_type_name on product(type_name);

alter table arrangement add constraint fk_arrangement2product foreign key (product_id) references product(id);

create table balance_history_item
(
  id varchar2(36) not null,
  external_arrangement_id varchar2(50) not null,
  arrangement_id varchar2(36) not null,
  balance decimal(23, 5) not null,
  updated_date timestamp not null,
  constraint pk_balance_history_id primary key (id)
);

alter table balance_history_item add constraint fk_balance_history2arr foreign key (arrangement_id) references arrangement (id);


create table arrangement_legal_entities
(
  arrangement_id varchar2(36) not null,
  legal_entity_id varchar2(36) not null,
  constraint arr_le_pk primary key (arrangement_id, legal_entity_id)
);

alter table arrangement_legal_entities add constraint fk_arrangement2legalEntity foreign key (arrangement_id)    references arrangement(id);

create index ix_legal_entity_id on arrangement_legal_entities(legal_entity_id);

create table user_preferences
(
  user_id varchar2(36) not null,
  arrangement_id varchar2(36) not null,
  alias varchar2(50),
  visible number(1),
  favorite number(1)
);

alter table user_preferences add constraint pk_usr_pref_user_id_arr_id primary key (user_id, arrangement_id);

alter table user_preferences add constraint fk_usr_pref_arr2arrangement foreign key (arrangement_id) references arrangement(id);

create index ix_usr_pref_user_id on user_preferences(user_id);

/** arrangement_state **/
create table arrangement_state
(
  id                    integer generated by default on null as identity not null,
  external_state_id     varchar2(50) not null,
  state                 varchar2(50) not null,
  description           varchar2(200),
  constraint  pk_arrangement_state primary key ( id ) using index (create unique index ix_arr_state_id on arrangement_state(id))
);

alter table arrangement_state add constraint uq_arr_state_external_id unique (external_state_id);
alter table arrangement_state add constraint uq_arr_state_state unique (state);

insert into arrangement_state (external_state_id, state, description) values ('Active', 'Active', 'Active state');
insert into arrangement_state (external_state_id, state, description) values ('Inactive', 'Inactive', 'Inactive state');
insert into arrangement_state (external_state_id, state, description) values ('Closed', 'Closed', 'Closed state');

alter table arrangement add constraint fk_arrangement2as foreign key (state_id) references arrangement_state(id);

create table translation_entity
(
    translated_entity varchar2(50) not null,
    translated_column varchar2(50) not null,
    constraint pk_translation_entity primary key (translated_entity, translated_column)
);

insert into translation_entity (translated_entity, translated_column) values ('product_kind', 'kind_name');
insert into translation_entity (translated_entity, translated_column) values ('product', 'type_name');

CREATE TABLE id_group (
    id NUMBER(38, 0) NOT NULL,
    ref_id varchar2(36) NOT NULL,
    info varchar2(40) NOT NULL,
    CONSTRAINT id_group_PK PRIMARY KEY (id, ref_id)
);
CREATE INDEX ix_id_group_id ON id_group (id);
